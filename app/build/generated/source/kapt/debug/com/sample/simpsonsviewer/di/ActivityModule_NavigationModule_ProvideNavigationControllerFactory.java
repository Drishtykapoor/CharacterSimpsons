// Generated by Dagger (https://dagger.dev).
package com.sample.simpsonsviewer.di;

import androidx.navigation.NavController;
import com.sample.simpsonsviewer.view.MainActivity;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityModule_NavigationModule_ProvideNavigationControllerFactory implements Factory<NavController> {
  private final Provider<MainActivity> mainActivityProvider;

  public ActivityModule_NavigationModule_ProvideNavigationControllerFactory(
      Provider<MainActivity> mainActivityProvider) {
    this.mainActivityProvider = mainActivityProvider;
  }

  @Override
  public NavController get() {
    return provideNavigationController(mainActivityProvider.get());
  }

  public static ActivityModule_NavigationModule_ProvideNavigationControllerFactory create(
      Provider<MainActivity> mainActivityProvider) {
    return new ActivityModule_NavigationModule_ProvideNavigationControllerFactory(mainActivityProvider);
  }

  public static NavController provideNavigationController(MainActivity mainActivity) {
    return Preconditions.checkNotNullFromProvides(ActivityModule.NavigationModule.INSTANCE.provideNavigationController(mainActivity));
  }
}
