// Generated by Dagger (https://dagger.dev).
package com.sample.character.view;

import com.sample.character.viewmodel.SimpsonsHomeViewModelImpl;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SimpsonsHomeFragment_MembersInjector implements MembersInjector<SimpsonsHomeFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<SimpsonsHomeViewModelImpl> viewModelProvider;

  public SimpsonsHomeFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SimpsonsHomeViewModelImpl> viewModelProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<SimpsonsHomeFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SimpsonsHomeViewModelImpl> viewModelProvider) {
    return new SimpsonsHomeFragment_MembersInjector(androidInjectorProvider, viewModelProvider);
  }

  @Override
  public void injectMembers(SimpsonsHomeFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("com.sample.character.view.SimpsonsHomeFragment.viewModel")
  public static void injectViewModel(SimpsonsHomeFragment instance,
      SimpsonsHomeViewModelImpl viewModel) {
    instance.viewModel = viewModel;
  }
}
